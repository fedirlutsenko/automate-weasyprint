import os
import json
import argparse

from datetime import date
from typing import List, Any

import yaml

PLACES_PATH = "./data/places"
SCHEDULES_PATH = "./data/schedules"


def load_yaml_file(path: str) -> Any:
    with open(path, "r", encoding="utf-8") as file:
        file_data = yaml.load(file.read(), Loader=yaml.Loader)
        return file_data


def load_json_file(path: str) -> Any:
    with open(path, "r", encoding="utf-8") as file:
        file_data = json.loads(file.read())
        return file_data


def get_options(path: str) -> List[str]:
    return [f.rstrip(".yaml") for f in os.listdir(path)]


def main() -> None:
    places_list = get_options(PLACES_PATH)
    schedules = get_options(SCHEDULES_PATH)
    today = date.today()
    edition = today.year if today.month <= 3 else today.year + 1

    parser = argparse.ArgumentParser(
        description="Zosia-print - generates printables based on the HTML "
                    "templates and data from Zosia website.")
    parser.add_argument('--place', choices=places_list, required=True,
                        help="Name of the place where Zosia will be held.")
    parser.add_argument('--schedule', choices=schedules, default=edition,
                        help="Name of file with schedule for this year.")
    parser.add_argument('--data', default='data.json', help="Path to JSON file"
                        "generated by Zosia website.")
    args = parser.parse_args()
    print(args)

    schedule = load_yaml_file(f"{SCHEDULES_PATH}/{args.schedule}.yaml")
    places = load_yaml_file(f"{PLACES_PATH}/{args.place}.yaml")
    data = load_json_file(args.data)

    # TODO: Validate data
    # TODO: Load information about highlighted organizations
    # and contacts to organizers
    # TODO: Generate PDF files ;)


if __name__ == "__main__":
    main()
